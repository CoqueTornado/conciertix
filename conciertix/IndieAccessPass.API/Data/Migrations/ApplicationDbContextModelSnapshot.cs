// <auto-generated />
using System;
using IndieAccessPass.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndieAccessPass.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IndieAccessPass.API.Models.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560"),
                            Bio = "Folk band exploring ancient tales.",
                            Genre = "Folk",
                            ImageUrl = "https://placehold.co/150/FFC107/000000?text=FolkBand",
                            Name = "The Wandering Minstrels"
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561"),
                            Bio = "Riding the waves of 80s nostalgia.",
                            Genre = "Synthwave",
                            ImageUrl = "https://placehold.co/150/00BCD4/FFFFFF?text=Synthwave",
                            Name = "Synthwave Surfers"
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562"),
                            Bio = "Exploring the universe through jazz.",
                            Genre = "Jazz",
                            ImageUrl = "https://placehold.co/150/9C27B0/FFFFFF?text=Jazz",
                            Name = "Cosmic Jazz Quartet"
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563"),
                            Bio = "Hard-hitting rock anthems.",
                            Genre = "Rock",
                            ImageUrl = "https://placehold.co/150/F44336/FFFFFF?text=Rock",
                            Name = "Rebel Riffs"
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564"),
                            Bio = "Electronic beats for the soul.",
                            Genre = "Electronic",
                            ImageUrl = "https://placehold.co/150/4CAF50/FFFFFF?text=Electronic",
                            Name = "DJ Echo"
                        });
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AvailableTickets")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImagePosterUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PricePerTicket")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalCapacity")
                        .HasColumnType("integer");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345670"),
                            AvailableTickets = 150,
                            Description = "An evening of enchanting folk music.",
                            EventDate = new DateTime(2025, 5, 17, 18, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/FFC107/000000?text=FolkFest",
                            Name = "Folk Fest Under the Stars",
                            PricePerTicket = 25.00m,
                            Status = "Published",
                            TotalCapacity = 150,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345671"),
                            AvailableTickets = 200,
                            Description = "Dive into the retro-future sounds.",
                            EventDate = new DateTime(2025, 5, 20, 20, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/00BCD4/FFFFFF?text=SynthNight",
                            Name = "Synth Riders Night",
                            PricePerTicket = 30.00m,
                            Status = "Published",
                            TotalCapacity = 200,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345672"),
                            AvailableTickets = 100,
                            Description = "A journey through cosmic jazz.",
                            EventDate = new DateTime(2025, 5, 25, 19, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/9C27B0/FFFFFF?text=JazzGalaxy",
                            Name = "Jazz Galaxy Exploration",
                            PricePerTicket = 40.00m,
                            Status = "Published",
                            TotalCapacity = 100,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123452")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345673"),
                            AvailableTickets = 300,
                            Description = "Unleash your inner rebel.",
                            EventDate = new DateTime(2025, 5, 30, 18, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/F44336/FFFFFF?text=RockRebellion",
                            Name = "Rock Rebellion Fest",
                            PricePerTicket = 35.00m,
                            Status = "Published",
                            TotalCapacity = 300,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345674"),
                            AvailableTickets = 250,
                            Description = "Experience the bloom of electronic music.",
                            EventDate = new DateTime(2025, 5, 15, 21, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/4CAF50/FFFFFF?text=ElectronicBloom",
                            Name = "Electronic Bloom",
                            PricePerTicket = 28.00m,
                            Status = "Published",
                            TotalCapacity = 250,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345675"),
                            AvailableTickets = 50,
                            Description = "Intimate acoustic session.",
                            EventDate = new DateTime(2025, 5, 11, 18, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/000000/FFFFFF?text=Event+6",
                            Name = "Acoustic Experience #1",
                            PricePerTicket = 10m,
                            Status = "Published",
                            TotalCapacity = 50,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345676"),
                            AvailableTickets = 60,
                            Description = "Experience the latest sounds.",
                            EventDate = new DateTime(2025, 5, 14, 19, 15, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/12D687/FFFFFF?text=Event+7",
                            Name = "Rhythm Experience #2",
                            PricePerTicket = 11.5m,
                            Status = "Draft",
                            TotalCapacity = 60,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345677"),
                            AvailableTickets = 70,
                            Description = "An unforgettable night of music.",
                            EventDate = new DateTime(2025, 5, 17, 20, 30, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/25AD0E/FFFFFF?text=Event+8",
                            Name = "Electric Showcase #3",
                            PricePerTicket = 13m,
                            Status = "Published",
                            TotalCapacity = 70,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345678"),
                            AvailableTickets = 80,
                            Description = "A unique musical journey.",
                            EventDate = new DateTime(2025, 5, 20, 21, 45, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/388395/FFFFFF?text=Event+9",
                            Name = "Acoustic Celebration #4",
                            PricePerTicket = 14.5m,
                            Status = "Draft",
                            TotalCapacity = 80,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345679"),
                            AvailableTickets = 90,
                            Description = "Intimate acoustic session.",
                            EventDate = new DateTime(2025, 5, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/4B5A1C/FFFFFF?text=Event+10",
                            Name = "Harmony Party #5",
                            PricePerTicket = 16m,
                            Status = "Published",
                            TotalCapacity = 90,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567a"),
                            AvailableTickets = 100,
                            Description = "Get ready to dance!",
                            EventDate = new DateTime(2025, 5, 26, 23, 15, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/5E30A3/FFFFFF?text=Event+11",
                            Name = "Acoustic Gathering #6",
                            PricePerTicket = 17.5m,
                            Status = "Draft",
                            TotalCapacity = 100,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567b"),
                            AvailableTickets = 110,
                            Description = "Intimate acoustic session.",
                            EventDate = new DateTime(2025, 5, 29, 18, 30, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/71072A/FFFFFF?text=Event+12",
                            Name = "Electric Fest #7",
                            PricePerTicket = 19m,
                            Status = "Published",
                            TotalCapacity = 110,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567c"),
                            AvailableTickets = 120,
                            Description = "An unforgettable night of music.",
                            EventDate = new DateTime(2025, 6, 1, 19, 45, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/83DDB1/FFFFFF?text=Event+13",
                            Name = "Beat Celebration #8",
                            PricePerTicket = 20.5m,
                            Status = "Draft",
                            TotalCapacity = 120,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567d"),
                            AvailableTickets = 130,
                            Description = "An unforgettable night of music.",
                            EventDate = new DateTime(2025, 6, 4, 20, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/96B438/FFFFFF?text=Event+14",
                            Name = "Harmony Showcase #9",
                            PricePerTicket = 22m,
                            Status = "Published",
                            TotalCapacity = 130,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567e"),
                            AvailableTickets = 140,
                            Description = "Get ready to dance!",
                            EventDate = new DateTime(2025, 6, 7, 21, 15, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/A98ABF/FFFFFF?text=Event+15",
                            Name = "Acoustic Celebration #10",
                            PricePerTicket = 23.5m,
                            Status = "Draft",
                            TotalCapacity = 140,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567f"),
                            AvailableTickets = 150,
                            Description = "An unforgettable night of music.",
                            EventDate = new DateTime(2025, 6, 10, 22, 30, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/BC6146/FFFFFF?text=Event+16",
                            Name = "Rhythm Night #11",
                            PricePerTicket = 25m,
                            Status = "Published",
                            TotalCapacity = 150,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345680"),
                            AvailableTickets = 160,
                            Description = "Intimate acoustic session.",
                            EventDate = new DateTime(2025, 6, 13, 23, 45, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/CF37CD/FFFFFF?text=Event+17",
                            Name = "Vibe Night #12",
                            PricePerTicket = 26.5m,
                            Status = "Draft",
                            TotalCapacity = 160,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345681"),
                            AvailableTickets = 170,
                            Description = "Get ready to dance!",
                            EventDate = new DateTime(2025, 6, 16, 18, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/E20E54/FFFFFF?text=Event+18",
                            Name = "Cosmic Experience #13",
                            PricePerTicket = 28m,
                            Status = "Published",
                            TotalCapacity = 170,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123452")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345682"),
                            AvailableTickets = 180,
                            Description = "Celebrating the best of indie music.",
                            EventDate = new DateTime(2025, 6, 19, 19, 15, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/F4E4DB/FFFFFF?text=Event+19",
                            Name = "Rhythm Gathering #14",
                            PricePerTicket = 29.5m,
                            Status = "Draft",
                            TotalCapacity = 180,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345683"),
                            AvailableTickets = 190,
                            Description = "Epic electronic beats.",
                            EventDate = new DateTime(2025, 6, 22, 20, 30, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/07BB63/FFFFFF?text=Event+20",
                            Name = "Electric Fest #15",
                            PricePerTicket = 31m,
                            Status = "Published",
                            TotalCapacity = 190,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345684"),
                            AvailableTickets = 200,
                            Description = "Live and loud!",
                            EventDate = new DateTime(2025, 6, 25, 21, 45, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/1A91EA/FFFFFF?text=Event+21",
                            Name = "Melody Party #16",
                            PricePerTicket = 32.5m,
                            Status = "Draft",
                            TotalCapacity = 200,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345685"),
                            AvailableTickets = 210,
                            Description = "Get ready to dance!",
                            EventDate = new DateTime(2025, 6, 28, 22, 0, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/2D6871/FFFFFF?text=Event+22",
                            Name = "Harmony Celebration #17",
                            PricePerTicket = 34m,
                            Status = "Published",
                            TotalCapacity = 210,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123452")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345686"),
                            AvailableTickets = 220,
                            Description = "Epic electronic beats.",
                            EventDate = new DateTime(2025, 7, 1, 23, 15, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/403EF8/FFFFFF?text=Event+23",
                            Name = "Sonic Fest #18",
                            PricePerTicket = 35.5m,
                            Status = "Draft",
                            TotalCapacity = 220,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345687"),
                            AvailableTickets = 230,
                            Description = "Intimate acoustic session.",
                            EventDate = new DateTime(2025, 7, 4, 18, 30, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/53157F/FFFFFF?text=Event+24",
                            Name = "Electric Journey #19",
                            PricePerTicket = 37m,
                            Status = "Published",
                            TotalCapacity = 230,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451")
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345688"),
                            AvailableTickets = 240,
                            Description = "An unforgettable night of music.",
                            EventDate = new DateTime(2025, 7, 7, 19, 45, 0, 0, DateTimeKind.Utc),
                            ImagePosterUrl = "https://placehold.co/300x200/65EC06/FFFFFF?text=Event+25",
                            Name = "Acoustic Fest #20",
                            PricePerTicket = 38.5m,
                            Status = "Draft",
                            TotalCapacity = 240,
                            VenueId = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123452")
                        });
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.EventArtist", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.HasKey("EventId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("EventArtists");

                    b.HasData(
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345670"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345671"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345671"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345672"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345673"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345673"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345674"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345675"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345676"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345676"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345676"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345677"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345677"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345677"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345678"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345678"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345679"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345679"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567a"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567a"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567b"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567b"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567c"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567d"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567e"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567e"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567e"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567f"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def01234567f"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345680"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345680"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345681"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345682"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345683"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345684"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345684"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345684"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345685"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345685"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345685"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345686"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345686"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345686"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234560")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345687"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234563")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345687"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345688"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234562")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345688"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234564")
                        },
                        new
                        {
                            EventId = new Guid("c1d2e3f4-a5b6-7788-99c0-def012345688"),
                            ArtistId = new Guid("b1c2d3e4-f5a6-7788-99b0-cdef01234561")
                        });
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumberOfTickets")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UniqueBookingReference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123450"),
                            Address = "123 Music Lane",
                            City = "Metroville",
                            Name = "The Indie Stage"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123451"),
                            Address = "456 Rock Road",
                            City = "Groove City",
                            Name = "Rock Hard Place"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7788-99a0-bcdef0123452"),
                            Address = "789 Harmony Ave",
                            City = "Serenity Falls",
                            Name = "The Acoustic Corner"
                        });
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Event", b =>
                {
                    b.HasOne("IndieAccessPass.API.Models.Venue", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.EventArtist", b =>
                {
                    b.HasOne("IndieAccessPass.API.Models.Artist", "Artist")
                        .WithMany("EventArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieAccessPass.API.Models.Event", "Event")
                        .WithMany("EventArtists")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Reservation", b =>
                {
                    b.HasOne("IndieAccessPass.API.Models.Event", "Event")
                        .WithMany("Reservations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieAccessPass.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Artist", b =>
                {
                    b.Navigation("EventArtists");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Event", b =>
                {
                    b.Navigation("EventArtists");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("IndieAccessPass.API.Models.Venue", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
